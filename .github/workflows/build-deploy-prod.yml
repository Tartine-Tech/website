# This is a basic workflow to help you get started with Actions

name: CI - CD prod

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.4.0
      with:
        # SDK version to use. Example: 2.2.104
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
    - name: .NET Core Local Tool Restore
      run: dotnet tool restore
      working-directory: TartineEtTech.website
    - name: libman restore
      run: dotnet libman restore
      working-directory: TartineEtTech.Website
    - name: dotnet build
      run: dotnet build --configuration Release --no-restore
    - name: dotnet test
      run: dotnet test --no-restore --verbosity normal
      working-directory: TartineEtTech.Website.Tests
    - name: dotnet publish
      run: dotnet publish -c Release -o './myapp'
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: tartineettechgaprod
        # Applies to Web App only: Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: $ {{ secrets.publish_profile_prod }}
        package: './myapp'
        
